The goal of this problem is to implement the "Median Maintenance" algorithm (covered in the Week 3 lecture on heap
applications). The text file contains a list of the integers from 1 to 10000 in unsorted order; you should treat this
as a stream of numbers, arriving one by one. Letting x(i) denote the i-th number of the file, the k-th median m(k)
is defined as the median of the numbers x(1),…,x(k). (So, if k is odd, then m(k) is ((k+1)/2)th smallest number among
x(1),…,x(k); if k is even, then m(k) is the (k/2)th smallest number among x(1),…,x(k).)

In the box below you should type the sum of these 10000 medians, modulo 10000 (i.e., only the last 4 digits).
That is, you should compute (m1+m2+m3+⋯+m10000)mod10000.

OPTIONAL EXERCISE: Compare the performance achieved by heap-based and search-tree-based implementations of the algorithm.
